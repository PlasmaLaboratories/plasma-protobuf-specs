syntax = "proto3";

package co.topl.brambl.models;

import 'validate/validate.proto';
import 'scalapb/scalapb.proto';
import 'scalapb/validate.proto';

import 'quivr/models/shared.proto';
import 'brambl/models/transaction/schedule.proto';

// Events are uniquely identifiable occurrences of state mutations within the blockchain protocol.
// Each event is associated with certain data that may be updated every tick.
message Event {
    oneof value {
        // hard fork
        Eon eon = 1;
        // configuration change
        Era era = 2;
        // length of time in slots where stake updates occur
        Epoch epoch = 3;
        // Header created
        Header header = 4;
        //IO Transaction
        IoTransaction ioTransaction = 5;
    }

    message Eon {
        uint64 beginSlot = 1;
        uint64 height = 2;
    }

    message Era {
        uint64 beginSlot = 1;
        uint64 height = 2;
    }

    message Epoch {
        uint64 beginSlot = 1;
        uint64 height = 2;
    }

    message Header {
        uint64 height = 1;
    }

    message IoTransaction {
        //the range of acceptable slots the transaction can be accepted into
        co.topl.brambl.models.transaction.Schedule schedule = 1 [(validate.rules).message.required = true];
        quivr.models.SmallData metadata = 4 [(validate.rules).message.required = true];
    }
}

option (scalapb.options) = {
    [scalapb.validate.file] {
        validate_at_construction: true
    }
    field_transformations: [
        {
            when: {options: {[validate.rules] {message: {required: true}}}}
            set: {
                [scalapb.field] {
                    required: true
                }
            }
        }
    ]
};