syntax = "proto3";

package org.plasmalabs.sdk.models;

import 'validate/validate.proto';

import 'quivr/models/shared.proto';
import 'sdk/models/transaction/schedule.proto';
import 'sdk/models/policies_statements/policy.proto';
import 'sdk/models/policies_statements/statements.proto';

// Events are uniquely identifiable occurrences of state mutations within the blockchain protocol.
// Each event is associated with certain data that may be updated every tick.
message Event {
  oneof value {
    // hard fork
    Eon eon = 1;
    // configuration change
    Era era = 2;
    // length of time in slots where stake updates occur
    Epoch epoch = 3;
    // Header created
    Header header = 4;
    //IO Transaction
    IoTransaction ioTransaction = 5;
    // Polices and asset statements
    Policies policies = 6;
  }

  message Eon {
    uint64 beginSlot = 1;
    uint64 height = 2;
  }

  message Era {
    uint64 beginSlot = 1;
    uint64 height = 2;
  }

  message Epoch {
    uint64 beginSlot = 1;
    uint64 height = 2;
  }

  message Header {
    uint64 height = 1;
  }

  message IoTransaction {
    //the range of acceptable slots the transaction can be accepted into
    org.plasmalabs.sdk.models.transaction.Schedule schedule = 1 [(validate.rules).message.required = true];
    quivr.models.SmallData metadata = 4 [(validate.rules).message.required = true];
  }

  message Policies {
    // 0-to-many list of group Policy
    repeated org.plasmalabs.sdk.models.GroupPolicy groupPolicies = 1;
    // 0-to-many list of seriesPolicy
    repeated org.plasmalabs.sdk.models.SeriesPolicy seriesPolicies = 2;
    // 0-to-many list of minting asset statements
    repeated org.plasmalabs.sdk.models.AssetMintingStatement mintingStatements = 3;
    // 0-to-many list of merging asset statements
    repeated org.plasmalabs.sdk.models.AssetMergingStatement mergingStatements = 4;
    // 0-to-many list of splitting asset statements
    repeated org.plasmalabs.sdk.models.AssetSplittingStatement splittingStatements = 5;
  }
}
